/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import UTIL.ConjuntoMVC;
import UTIL.FichaMVC;
import java.util.ArrayList;
import java.util.List;


import CONTROLLERS.PantallaPartidaController;
import MODELS.ModeloDatos;
import UTIL.SuscriptorPartida;

import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author rosafresita
 */
public class PartidaView extends JFrame implements SuscriptorPartida{

    private static PartidaView instancia;

    public static PartidaView obtenerInstancia() {

        if (PartidaView.instancia == null) {
            PartidaView.instancia = new PartidaView();
        }

        return PartidaView.instancia;
    }

    /**
     * Creates new form FInicio
     */
    private PartidaView() {
        initComponents();

        this.setLocationRelativeTo(null);

        List<FichaMVC> fichas1 = createRandomFicha(100);
        List<FichaMVC> fichas2 = createRandomFicha(5);

        fichas1.forEach((ficha) -> {
            this.panelFichas.add(ficha);
        });

        //Agregar conjuntos al tablero
        this.tableroPanel.add(
                new ConjuntoMVC(fichas2)
        );

    }

    private List<FichaMVC> createRandomFicha(int max) {
        List<FichaMVC> fichas = new ArrayList();

        for (byte i = 0; i < max; i++) {

            fichas.add(new FichaMVC(i));

        }

        return fichas;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableroPanel = new javax.swing.JPanel();
        opcionesPanel = new javax.swing.JPanel();
        botonAgregar = new javax.swing.JButton();
        botonDividir = new javax.swing.JButton();
        botonPozo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelFichas = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 608));

        tableroPanel.setBackground(new java.awt.Color(255, 204, 153));

        javax.swing.GroupLayout tableroPanelLayout = new javax.swing.GroupLayout(tableroPanel);
        tableroPanel.setLayout(tableroPanelLayout);
        tableroPanelLayout.setHorizontalGroup(
            tableroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        tableroPanelLayout.setVerticalGroup(
            tableroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
        );

        botonAgregar.setText("Agregar");
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                precionaBotonAgregarFicha(evt);
            }
        });

        botonDividir.setText("Dividir");

        botonPozo.setText("Pozo");

        jScrollPane1.setViewportView(panelFichas);

        jLabel1.setText("Inicio");

        jLabel2.setText("Final");

        javax.swing.GroupLayout opcionesPanelLayout = new javax.swing.GroupLayout(opcionesPanel);
        opcionesPanel.setLayout(opcionesPanelLayout);
        opcionesPanelLayout.setHorizontalGroup(
            opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2))
                .addGap(18, 18, 18)
                .addGroup(opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonAgregar)
                    .addComponent(botonDividir)
                    .addComponent(botonPozo))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        opcionesPanelLayout.setVerticalGroup(
            opcionesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(opcionesPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(opcionesPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(opcionesPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(botonAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonDividir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonPozo))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(opcionesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tableroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opcionesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private List<FichaMVC> obtenerFichasMazoSeleccionadas() throws Exception {
        List<FichaMVC> fichas = new ArrayList<>();

        for (Component c : this.panelFichas.getComponents()) {

            if (c.getClass() == FichaMVC.class) {
                FichaMVC ficha = (FichaMVC) c;

                if (!ficha.isSelected()) {
                    continue;
                }

                fichas.add((FichaMVC) c);
            }

        }

        if (fichas.isEmpty()) {
            throw new Exception("No selecciono fichas");
        }

        return fichas;
    }

    private ConjuntoMVC obtenerConjuntoSeleccionado() {

        for (Component c : this.getComponents()) {

            if ( c.getClass() == ConjuntoMVC.class) {
                ConjuntoMVC conjunto = (ConjuntoMVC) c;
                if (!conjunto.isSelected()) {
                    continue;
                }

                return conjunto; 

            }

        }

        return null;

    }

    /**
     * Método que muestra una alerta para que el jugador elija si quiere modificar el conjunto
     * adelante o atras
     */
    private ConjuntoMVC.PosicionEnum muestraMensajeDelanteOAtras(){
        // Crear un array de strings con las opciones
        String[] opciones = {"Adelante", "Atrás"};

        // Mostrar la ventana de diálogo con el JComboBox para las opciones
        int seleccion = JOptionPane.showOptionDialog(
                this,
                "Selecciona una opción:",
                "Alerta con Opciones",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                null,
                opciones,
                opciones[0]);

        // Verificar la selección del usuario
        if (seleccion == 0) {
            
            return ConjuntoMVC.PosicionEnum.ADELANTE;
            
        } else if (seleccion == 1) {
            
            return ConjuntoMVC.PosicionEnum.DETRAS;
            
        } else {
            
            return null;
        }
        
      
    }
    
    private void precionaBotonAgregarFicha(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_precionaBotonAgregarFicha

        //Verificar fichas seleccionadas
        try {
            List<FichaMVC> fichasSeleccionadas = obtenerFichasMazoSeleccionadas();

            ConjuntoMVC conjuntoSeleccionado = obtenerConjuntoSeleccionado();
            
            ConjuntoMVC.PosicionEnum posicion = muestraMensajeDelanteOAtras();
            
            PantallaPartidaController pc = PantallaPartidaController.obtenerInstancia();
            pc.realizarMovimientoAgregar(fichasSeleccionadas, conjuntoSeleccionado, posicion);
                 
//            PantallaPartidaController.

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_precionaBotonAgregarFicha

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonDividir;
    private javax.swing.JButton botonPozo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JPanel opcionesPanel;
    private javax.swing.JPanel panelFichas;
    private javax.swing.JPanel tableroPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void notificar(ModeloDatos modelo) {

//        List<>
        
    }
}
